
TP2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000060  00800100  00000cce  00000d62  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000cce  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000012  00800160  00800160  00000dc2  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000dc2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000df4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001a0  00000000  00000000  00000e34  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c2b  00000000  00000000  00000fd4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000c10  00000000  00000000  00002bff  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000fdf  00000000  00000000  0000380f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000003a0  00000000  00000000  000047f0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006c5  00000000  00000000  00004b90  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001071  00000000  00000000  00005255  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000140  00000000  00000000  000062c6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__ctors_end>
   4:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
   8:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
   c:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  10:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  14:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  18:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  1c:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  20:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  24:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  28:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  2c:	0c 94 ec 03 	jmp	0x7d8	; 0x7d8 <__vector_11>
  30:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  34:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  38:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  3c:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  40:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  44:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  48:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  4c:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  50:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  54:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  58:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  5c:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  60:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  64:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>

00000068 <LcdCustomChar>:
  68:	00 1f 00 00 00 00 1f 00 00 1f 10 10 10 10 1f 00     ................
  78:	00 1f 18 18 18 18 1f 00 00 1f 1c 1c 1c 1c 1f 00     ................
  88:	00 1f 1e 1e 1e 1e 1f 00 00 1f 1f 1f 1f 1f 1f 00     ................
  98:	03 07 0f 1f 0f 07 03 00 18 1c 1e 1f 1e 1c 18 00     ................

000000a8 <__ctors_end>:
  a8:	11 24       	eor	r1, r1
  aa:	1f be       	out	0x3f, r1	; 63
  ac:	cf ef       	ldi	r28, 0xFF	; 255
  ae:	d8 e0       	ldi	r29, 0x08	; 8
  b0:	de bf       	out	0x3e, r29	; 62
  b2:	cd bf       	out	0x3d, r28	; 61

000000b4 <__do_copy_data>:
  b4:	11 e0       	ldi	r17, 0x01	; 1
  b6:	a0 e0       	ldi	r26, 0x00	; 0
  b8:	b1 e0       	ldi	r27, 0x01	; 1
  ba:	ee ec       	ldi	r30, 0xCE	; 206
  bc:	fc e0       	ldi	r31, 0x0C	; 12
  be:	02 c0       	rjmp	.+4      	; 0xc4 <__do_copy_data+0x10>
  c0:	05 90       	lpm	r0, Z+
  c2:	0d 92       	st	X+, r0
  c4:	a0 36       	cpi	r26, 0x60	; 96
  c6:	b1 07       	cpc	r27, r17
  c8:	d9 f7       	brne	.-10     	; 0xc0 <__do_copy_data+0xc>

000000ca <__do_clear_bss>:
  ca:	21 e0       	ldi	r18, 0x01	; 1
  cc:	a0 e6       	ldi	r26, 0x60	; 96
  ce:	b1 e0       	ldi	r27, 0x01	; 1
  d0:	01 c0       	rjmp	.+2      	; 0xd4 <.do_clear_bss_start>

000000d2 <.do_clear_bss_loop>:
  d2:	1d 92       	st	X+, r1

000000d4 <.do_clear_bss_start>:
  d4:	a2 37       	cpi	r26, 0x72	; 114
  d6:	b2 07       	cpc	r27, r18
  d8:	e1 f7       	brne	.-8      	; 0xd2 <.do_clear_bss_loop>
  da:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <main>
  de:	0c 94 65 06 	jmp	0xcca	; 0xcca <_exit>

000000e2 <__bad_interrupt>:
  e2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000e6 <time>:
  e6:	fc 01       	movw	r30, r24
  e8:	0f b6       	in	r0, 0x3f	; 63
  ea:	f8 94       	cli
  ec:	60 91 6e 01 	lds	r22, 0x016E	; 0x80016e <__system_time>
  f0:	70 91 6f 01 	lds	r23, 0x016F	; 0x80016f <__system_time+0x1>
  f4:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <__system_time+0x2>
  f8:	90 91 71 01 	lds	r25, 0x0171	; 0x800171 <__system_time+0x3>
  fc:	0f be       	out	0x3f, r0	; 63
  fe:	30 97       	sbiw	r30, 0x00	; 0
 100:	21 f0       	breq	.+8      	; 0x10a <time+0x24>
 102:	60 83       	st	Z, r22
 104:	71 83       	std	Z+1, r23	; 0x01
 106:	82 83       	std	Z+2, r24	; 0x02
 108:	93 83       	std	Z+3, r25	; 0x03
 10a:	08 95       	ret

0000010c <KEYPAD_Init>:
 10c:	20 e0       	ldi	r18, 0x00	; 0
 10e:	30 e0       	ldi	r19, 0x00	; 0
 110:	14 c0       	rjmp	.+40     	; 0x13a <KEYPAD_Init+0x2e>
 112:	44 b1       	in	r20, 0x04	; 4
 114:	f9 01       	movw	r30, r18
 116:	e5 5e       	subi	r30, 0xE5	; 229
 118:	fe 4f       	sbci	r31, 0xFE	; 254
 11a:	81 e0       	ldi	r24, 0x01	; 1
 11c:	90 e0       	ldi	r25, 0x00	; 0
 11e:	00 80       	ld	r0, Z
 120:	02 c0       	rjmp	.+4      	; 0x126 <KEYPAD_Init+0x1a>
 122:	88 0f       	add	r24, r24
 124:	99 1f       	adc	r25, r25
 126:	0a 94       	dec	r0
 128:	e2 f7       	brpl	.-8      	; 0x122 <KEYPAD_Init+0x16>
 12a:	94 2f       	mov	r25, r20
 12c:	98 2b       	or	r25, r24
 12e:	94 b9       	out	0x04, r25	; 4
 130:	95 b1       	in	r25, 0x05	; 5
 132:	89 2b       	or	r24, r25
 134:	85 b9       	out	0x05, r24	; 5
 136:	2f 5f       	subi	r18, 0xFF	; 255
 138:	3f 4f       	sbci	r19, 0xFF	; 255
 13a:	24 30       	cpi	r18, 0x04	; 4
 13c:	31 05       	cpc	r19, r1
 13e:	4c f3       	brlt	.-46     	; 0x112 <KEYPAD_Init+0x6>
 140:	8a b1       	in	r24, 0x0a	; 10
 142:	80 68       	ori	r24, 0x80	; 128
 144:	8a b9       	out	0x0a, r24	; 10
 146:	8b b1       	in	r24, 0x0b	; 11
 148:	80 68       	ori	r24, 0x80	; 128
 14a:	8b b9       	out	0x0b, r24	; 11
 14c:	20 e0       	ldi	r18, 0x00	; 0
 14e:	30 e0       	ldi	r19, 0x00	; 0
 150:	15 c0       	rjmp	.+42     	; 0x17c <KEYPAD_Init+0x70>
 152:	4a b1       	in	r20, 0x0a	; 10
 154:	f9 01       	movw	r30, r18
 156:	e9 5e       	subi	r30, 0xE9	; 233
 158:	fe 4f       	sbci	r31, 0xFE	; 254
 15a:	81 e0       	ldi	r24, 0x01	; 1
 15c:	90 e0       	ldi	r25, 0x00	; 0
 15e:	00 80       	ld	r0, Z
 160:	02 c0       	rjmp	.+4      	; 0x166 <KEYPAD_Init+0x5a>
 162:	88 0f       	add	r24, r24
 164:	99 1f       	adc	r25, r25
 166:	0a 94       	dec	r0
 168:	e2 f7       	brpl	.-8      	; 0x162 <KEYPAD_Init+0x56>
 16a:	98 2f       	mov	r25, r24
 16c:	90 95       	com	r25
 16e:	94 23       	and	r25, r20
 170:	9a b9       	out	0x0a, r25	; 10
 172:	9b b1       	in	r25, 0x0b	; 11
 174:	89 2b       	or	r24, r25
 176:	8b b9       	out	0x0b, r24	; 11
 178:	2f 5f       	subi	r18, 0xFF	; 255
 17a:	3f 4f       	sbci	r19, 0xFF	; 255
 17c:	24 30       	cpi	r18, 0x04	; 4
 17e:	31 05       	cpc	r19, r1
 180:	44 f3       	brlt	.-48     	; 0x152 <KEYPAD_Init+0x46>
 182:	08 95       	ret

00000184 <KEYPAD_Update>:
 184:	cf 93       	push	r28
 186:	dc 01       	movw	r26, r24
 188:	c0 e0       	ldi	r28, 0x00	; 0
 18a:	4f c0       	rjmp	.+158    	; 0x22a <KEYPAD_Update+0xa6>
 18c:	85 b1       	in	r24, 0x05	; 5
 18e:	6c 2f       	mov	r22, r28
 190:	70 e0       	ldi	r23, 0x00	; 0
 192:	fb 01       	movw	r30, r22
 194:	e5 5e       	subi	r30, 0xE5	; 229
 196:	fe 4f       	sbci	r31, 0xFE	; 254
 198:	21 e0       	ldi	r18, 0x01	; 1
 19a:	30 e0       	ldi	r19, 0x00	; 0
 19c:	00 80       	ld	r0, Z
 19e:	02 c0       	rjmp	.+4      	; 0x1a4 <KEYPAD_Update+0x20>
 1a0:	22 0f       	add	r18, r18
 1a2:	33 1f       	adc	r19, r19
 1a4:	0a 94       	dec	r0
 1a6:	e2 f7       	brpl	.-8      	; 0x1a0 <KEYPAD_Update+0x1c>
 1a8:	20 95       	com	r18
 1aa:	28 23       	and	r18, r24
 1ac:	25 b9       	out	0x05, r18	; 5
 1ae:	90 e0       	ldi	r25, 0x00	; 0
 1b0:	2b c0       	rjmp	.+86     	; 0x208 <KEYPAD_Update+0x84>
 1b2:	29 b1       	in	r18, 0x09	; 9
 1b4:	49 2f       	mov	r20, r25
 1b6:	50 e0       	ldi	r21, 0x00	; 0
 1b8:	fa 01       	movw	r30, r20
 1ba:	e9 5e       	subi	r30, 0xE9	; 233
 1bc:	fe 4f       	sbci	r31, 0xFE	; 254
 1be:	30 e0       	ldi	r19, 0x00	; 0
 1c0:	00 80       	ld	r0, Z
 1c2:	02 c0       	rjmp	.+4      	; 0x1c8 <KEYPAD_Update+0x44>
 1c4:	35 95       	asr	r19
 1c6:	27 95       	ror	r18
 1c8:	0a 94       	dec	r0
 1ca:	e2 f7       	brpl	.-8      	; 0x1c4 <KEYPAD_Update+0x40>
 1cc:	20 fd       	sbrc	r18, 0
 1ce:	1b c0       	rjmp	.+54     	; 0x206 <KEYPAD_Update+0x82>
 1d0:	25 b1       	in	r18, 0x05	; 5
 1d2:	fb 01       	movw	r30, r22
 1d4:	e5 5e       	subi	r30, 0xE5	; 229
 1d6:	fe 4f       	sbci	r31, 0xFE	; 254
 1d8:	81 e0       	ldi	r24, 0x01	; 1
 1da:	90 e0       	ldi	r25, 0x00	; 0
 1dc:	00 80       	ld	r0, Z
 1de:	02 c0       	rjmp	.+4      	; 0x1e4 <KEYPAD_Update+0x60>
 1e0:	88 0f       	add	r24, r24
 1e2:	99 1f       	adc	r25, r25
 1e4:	0a 94       	dec	r0
 1e6:	e2 f7       	brpl	.-8      	; 0x1e0 <KEYPAD_Update+0x5c>
 1e8:	82 2b       	or	r24, r18
 1ea:	85 b9       	out	0x05, r24	; 5
 1ec:	66 0f       	add	r22, r22
 1ee:	77 1f       	adc	r23, r23
 1f0:	66 0f       	add	r22, r22
 1f2:	77 1f       	adc	r23, r23
 1f4:	46 0f       	add	r20, r22
 1f6:	57 1f       	adc	r21, r23
 1f8:	fa 01       	movw	r30, r20
 1fa:	e9 5f       	subi	r30, 0xF9	; 249
 1fc:	fe 4f       	sbci	r31, 0xFE	; 254
 1fe:	80 81       	ld	r24, Z
 200:	8c 93       	st	X, r24
 202:	81 e0       	ldi	r24, 0x01	; 1
 204:	3a c0       	rjmp	.+116    	; 0x27a <KEYPAD_Update+0xf6>
 206:	9f 5f       	subi	r25, 0xFF	; 255
 208:	94 30       	cpi	r25, 0x04	; 4
 20a:	98 f2       	brcs	.-90     	; 0x1b2 <KEYPAD_Update+0x2e>
 20c:	25 b1       	in	r18, 0x05	; 5
 20e:	fb 01       	movw	r30, r22
 210:	e5 5e       	subi	r30, 0xE5	; 229
 212:	fe 4f       	sbci	r31, 0xFE	; 254
 214:	81 e0       	ldi	r24, 0x01	; 1
 216:	90 e0       	ldi	r25, 0x00	; 0
 218:	00 80       	ld	r0, Z
 21a:	02 c0       	rjmp	.+4      	; 0x220 <KEYPAD_Update+0x9c>
 21c:	88 0f       	add	r24, r24
 21e:	99 1f       	adc	r25, r25
 220:	0a 94       	dec	r0
 222:	e2 f7       	brpl	.-8      	; 0x21c <KEYPAD_Update+0x98>
 224:	82 2b       	or	r24, r18
 226:	85 b9       	out	0x05, r24	; 5
 228:	cf 5f       	subi	r28, 0xFF	; 255
 22a:	c3 30       	cpi	r28, 0x03	; 3
 22c:	08 f4       	brcc	.+2      	; 0x230 <KEYPAD_Update+0xac>
 22e:	ae cf       	rjmp	.-164    	; 0x18c <KEYPAD_Update+0x8>
 230:	8b b1       	in	r24, 0x0b	; 11
 232:	8f 77       	andi	r24, 0x7F	; 127
 234:	8b b9       	out	0x0b, r24	; 11
 236:	80 e0       	ldi	r24, 0x00	; 0
 238:	1a c0       	rjmp	.+52     	; 0x26e <KEYPAD_Update+0xea>
 23a:	29 b1       	in	r18, 0x09	; 9
 23c:	48 2f       	mov	r20, r24
 23e:	50 e0       	ldi	r21, 0x00	; 0
 240:	fa 01       	movw	r30, r20
 242:	e9 5e       	subi	r30, 0xE9	; 233
 244:	fe 4f       	sbci	r31, 0xFE	; 254
 246:	30 e0       	ldi	r19, 0x00	; 0
 248:	00 80       	ld	r0, Z
 24a:	02 c0       	rjmp	.+4      	; 0x250 <KEYPAD_Update+0xcc>
 24c:	35 95       	asr	r19
 24e:	27 95       	ror	r18
 250:	0a 94       	dec	r0
 252:	e2 f7       	brpl	.-8      	; 0x24c <KEYPAD_Update+0xc8>
 254:	20 fd       	sbrc	r18, 0
 256:	0a c0       	rjmp	.+20     	; 0x26c <KEYPAD_Update+0xe8>
 258:	8b b1       	in	r24, 0x0b	; 11
 25a:	80 68       	ori	r24, 0x80	; 128
 25c:	8b b9       	out	0x0b, r24	; 11
 25e:	fa 01       	movw	r30, r20
 260:	ed 5e       	subi	r30, 0xED	; 237
 262:	fe 4f       	sbci	r31, 0xFE	; 254
 264:	80 81       	ld	r24, Z
 266:	8c 93       	st	X, r24
 268:	81 e0       	ldi	r24, 0x01	; 1
 26a:	07 c0       	rjmp	.+14     	; 0x27a <KEYPAD_Update+0xf6>
 26c:	8f 5f       	subi	r24, 0xFF	; 255
 26e:	84 30       	cpi	r24, 0x04	; 4
 270:	20 f3       	brcs	.-56     	; 0x23a <KEYPAD_Update+0xb6>
 272:	8b b1       	in	r24, 0x0b	; 11
 274:	80 68       	ori	r24, 0x80	; 128
 276:	8b b9       	out	0x0b, r24	; 11
 278:	80 e0       	ldi	r24, 0x00	; 0
 27a:	cf 91       	pop	r28
 27c:	08 95       	ret

0000027e <KEYPAD_Scan>:
 27e:	0f 93       	push	r16
 280:	1f 93       	push	r17
 282:	cf 93       	push	r28
 284:	df 93       	push	r29
 286:	1f 92       	push	r1
 288:	cd b7       	in	r28, 0x3d	; 61
 28a:	de b7       	in	r29, 0x3e	; 62
 28c:	8c 01       	movw	r16, r24
 28e:	ce 01       	movw	r24, r28
 290:	01 96       	adiw	r24, 0x01	; 1
 292:	0e 94 c2 00 	call	0x184	; 0x184 <KEYPAD_Update>
 296:	81 11       	cpse	r24, r1
 298:	06 c0       	rjmp	.+12     	; 0x2a6 <KEYPAD_Scan+0x28>
 29a:	9f ef       	ldi	r25, 0xFF	; 255
 29c:	90 93 60 01 	sts	0x0160, r25	; 0x800160 <__data_end>
 2a0:	90 93 04 01 	sts	0x0104, r25	; 0x800104 <Last_valid_key.1765>
 2a4:	13 c0       	rjmp	.+38     	; 0x2cc <KEYPAD_Scan+0x4e>
 2a6:	89 81       	ldd	r24, Y+1	; 0x01
 2a8:	90 91 60 01 	lds	r25, 0x0160	; 0x800160 <__data_end>
 2ac:	89 13       	cpse	r24, r25
 2ae:	0b c0       	rjmp	.+22     	; 0x2c6 <KEYPAD_Scan+0x48>
 2b0:	90 91 04 01 	lds	r25, 0x0104	; 0x800104 <Last_valid_key.1765>
 2b4:	89 17       	cp	r24, r25
 2b6:	39 f0       	breq	.+14     	; 0x2c6 <KEYPAD_Scan+0x48>
 2b8:	f8 01       	movw	r30, r16
 2ba:	80 83       	st	Z, r24
 2bc:	89 81       	ldd	r24, Y+1	; 0x01
 2be:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <Last_valid_key.1765>
 2c2:	81 e0       	ldi	r24, 0x01	; 1
 2c4:	03 c0       	rjmp	.+6      	; 0x2cc <KEYPAD_Scan+0x4e>
 2c6:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <__data_end>
 2ca:	80 e0       	ldi	r24, 0x00	; 0
 2cc:	0f 90       	pop	r0
 2ce:	df 91       	pop	r29
 2d0:	cf 91       	pop	r28
 2d2:	1f 91       	pop	r17
 2d4:	0f 91       	pop	r16
 2d6:	08 95       	ret

000002d8 <LCDsendChar>:
{
	for (uint8_t i=0;i<n;i++)
	{
		LCDsendCommand(0x14);
	}
}
 2d8:	65 b1       	in	r22, 0x05	; 5
 2da:	98 2f       	mov	r25, r24
 2dc:	90 74       	andi	r25, 0x40	; 64
 2de:	49 2f       	mov	r20, r25
 2e0:	50 e0       	ldi	r21, 0x00	; 0
 2e2:	55 95       	asr	r21
 2e4:	47 95       	ror	r20
 2e6:	55 95       	asr	r21
 2e8:	47 95       	ror	r20
 2ea:	55 95       	asr	r21
 2ec:	47 95       	ror	r20
 2ee:	55 95       	asr	r21
 2f0:	47 95       	ror	r20
 2f2:	98 2f       	mov	r25, r24
 2f4:	90 78       	andi	r25, 0x80	; 128
 2f6:	29 2f       	mov	r18, r25
 2f8:	30 e0       	ldi	r19, 0x00	; 0
 2fa:	02 2e       	mov	r0, r18
 2fc:	23 2f       	mov	r18, r19
 2fe:	00 0c       	add	r0, r0
 300:	22 1f       	adc	r18, r18
 302:	33 0b       	sbc	r19, r19
 304:	00 0c       	add	r0, r0
 306:	22 1f       	adc	r18, r18
 308:	33 1f       	adc	r19, r19
 30a:	96 2f       	mov	r25, r22
 30c:	99 7f       	andi	r25, 0xF9	; 249
 30e:	49 2b       	or	r20, r25
 310:	24 2b       	or	r18, r20
 312:	25 b9       	out	0x05, r18	; 5
 314:	68 b1       	in	r22, 0x08	; 8
 316:	98 2f       	mov	r25, r24
 318:	90 71       	andi	r25, 0x10	; 16
 31a:	49 2f       	mov	r20, r25
 31c:	50 e0       	ldi	r21, 0x00	; 0
 31e:	55 95       	asr	r21
 320:	47 95       	ror	r20
 322:	55 95       	asr	r21
 324:	47 95       	ror	r20
 326:	55 95       	asr	r21
 328:	47 95       	ror	r20
 32a:	98 2f       	mov	r25, r24
 32c:	90 72       	andi	r25, 0x20	; 32
 32e:	29 2f       	mov	r18, r25
 330:	30 e0       	ldi	r19, 0x00	; 0
 332:	35 95       	asr	r19
 334:	27 95       	ror	r18
 336:	35 95       	asr	r19
 338:	27 95       	ror	r18
 33a:	35 95       	asr	r19
 33c:	27 95       	ror	r18
 33e:	96 2f       	mov	r25, r22
 340:	99 7f       	andi	r25, 0xF9	; 249
 342:	49 2b       	or	r20, r25
 344:	24 2b       	or	r18, r20
 346:	28 b9       	out	0x08, r18	; 8
 348:	9b b1       	in	r25, 0x0b	; 11
 34a:	92 60       	ori	r25, 0x02	; 2
 34c:	9b b9       	out	0x0b, r25	; 11
 34e:	9b b1       	in	r25, 0x0b	; 11
 350:	91 60       	ori	r25, 0x01	; 1
 352:	9b b9       	out	0x0b, r25	; 11
 354:	25 ed       	ldi	r18, 0xD5	; 213
 356:	2a 95       	dec	r18
 358:	f1 f7       	brne	.-4      	; 0x356 <LCDsendChar+0x7e>
 35a:	00 00       	nop
 35c:	9b b1       	in	r25, 0x0b	; 11
 35e:	9e 7f       	andi	r25, 0xFE	; 254
 360:	9b b9       	out	0x0b, r25	; 11
 362:	9b b1       	in	r25, 0x0b	; 11
 364:	9d 7f       	andi	r25, 0xFD	; 253
 366:	9b b9       	out	0x0b, r25	; 11
 368:	95 ed       	ldi	r25, 0xD5	; 213
 36a:	9a 95       	dec	r25
 36c:	f1 f7       	brne	.-4      	; 0x36a <LCDsendChar+0x92>
 36e:	00 00       	nop
 370:	65 b1       	in	r22, 0x05	; 5
 372:	20 e1       	ldi	r18, 0x10	; 16
 374:	82 9f       	mul	r24, r18
 376:	c0 01       	movw	r24, r0
 378:	11 24       	eor	r1, r1
 37a:	ac 01       	movw	r20, r24
 37c:	40 74       	andi	r20, 0x40	; 64
 37e:	55 27       	eor	r21, r21
 380:	55 95       	asr	r21
 382:	47 95       	ror	r20
 384:	55 95       	asr	r21
 386:	47 95       	ror	r20
 388:	55 95       	asr	r21
 38a:	47 95       	ror	r20
 38c:	55 95       	asr	r21
 38e:	47 95       	ror	r20
 390:	9c 01       	movw	r18, r24
 392:	20 78       	andi	r18, 0x80	; 128
 394:	33 27       	eor	r19, r19
 396:	02 2e       	mov	r0, r18
 398:	23 2f       	mov	r18, r19
 39a:	00 0c       	add	r0, r0
 39c:	22 1f       	adc	r18, r18
 39e:	33 0b       	sbc	r19, r19
 3a0:	00 0c       	add	r0, r0
 3a2:	22 1f       	adc	r18, r18
 3a4:	33 1f       	adc	r19, r19
 3a6:	36 2f       	mov	r19, r22
 3a8:	39 7f       	andi	r19, 0xF9	; 249
 3aa:	43 2b       	or	r20, r19
 3ac:	24 2b       	or	r18, r20
 3ae:	25 b9       	out	0x05, r18	; 5
 3b0:	48 b1       	in	r20, 0x08	; 8
 3b2:	9c 01       	movw	r18, r24
 3b4:	20 71       	andi	r18, 0x10	; 16
 3b6:	33 27       	eor	r19, r19
 3b8:	35 95       	asr	r19
 3ba:	27 95       	ror	r18
 3bc:	35 95       	asr	r19
 3be:	27 95       	ror	r18
 3c0:	35 95       	asr	r19
 3c2:	27 95       	ror	r18
 3c4:	80 72       	andi	r24, 0x20	; 32
 3c6:	99 27       	eor	r25, r25
 3c8:	95 95       	asr	r25
 3ca:	87 95       	ror	r24
 3cc:	95 95       	asr	r25
 3ce:	87 95       	ror	r24
 3d0:	95 95       	asr	r25
 3d2:	87 95       	ror	r24
 3d4:	94 2f       	mov	r25, r20
 3d6:	99 7f       	andi	r25, 0xF9	; 249
 3d8:	29 2b       	or	r18, r25
 3da:	82 2b       	or	r24, r18
 3dc:	88 b9       	out	0x08, r24	; 8
 3de:	8b b1       	in	r24, 0x0b	; 11
 3e0:	82 60       	ori	r24, 0x02	; 2
 3e2:	8b b9       	out	0x0b, r24	; 11
 3e4:	8b b1       	in	r24, 0x0b	; 11
 3e6:	81 60       	ori	r24, 0x01	; 1
 3e8:	8b b9       	out	0x0b, r24	; 11
 3ea:	85 ed       	ldi	r24, 0xD5	; 213
 3ec:	8a 95       	dec	r24
 3ee:	f1 f7       	brne	.-4      	; 0x3ec <LCDsendChar+0x114>
 3f0:	00 00       	nop
 3f2:	8b b1       	in	r24, 0x0b	; 11
 3f4:	8e 7f       	andi	r24, 0xFE	; 254
 3f6:	8b b9       	out	0x0b, r24	; 11
 3f8:	8b b1       	in	r24, 0x0b	; 11
 3fa:	8d 7f       	andi	r24, 0xFD	; 253
 3fc:	8b b9       	out	0x0b, r24	; 11
 3fe:	95 ed       	ldi	r25, 0xD5	; 213
 400:	9a 95       	dec	r25
 402:	f1 f7       	brne	.-4      	; 0x400 <__EEPROM_REGION_LENGTH__>
 404:	00 00       	nop
 406:	08 95       	ret

00000408 <LCDsendCommand>:
 408:	65 b1       	in	r22, 0x05	; 5
 40a:	98 2f       	mov	r25, r24
 40c:	90 74       	andi	r25, 0x40	; 64
 40e:	49 2f       	mov	r20, r25
 410:	50 e0       	ldi	r21, 0x00	; 0
 412:	55 95       	asr	r21
 414:	47 95       	ror	r20
 416:	55 95       	asr	r21
 418:	47 95       	ror	r20
 41a:	55 95       	asr	r21
 41c:	47 95       	ror	r20
 41e:	55 95       	asr	r21
 420:	47 95       	ror	r20
 422:	98 2f       	mov	r25, r24
 424:	90 78       	andi	r25, 0x80	; 128
 426:	29 2f       	mov	r18, r25
 428:	30 e0       	ldi	r19, 0x00	; 0
 42a:	02 2e       	mov	r0, r18
 42c:	23 2f       	mov	r18, r19
 42e:	00 0c       	add	r0, r0
 430:	22 1f       	adc	r18, r18
 432:	33 0b       	sbc	r19, r19
 434:	00 0c       	add	r0, r0
 436:	22 1f       	adc	r18, r18
 438:	33 1f       	adc	r19, r19
 43a:	96 2f       	mov	r25, r22
 43c:	99 7f       	andi	r25, 0xF9	; 249
 43e:	49 2b       	or	r20, r25
 440:	24 2b       	or	r18, r20
 442:	25 b9       	out	0x05, r18	; 5
 444:	68 b1       	in	r22, 0x08	; 8
 446:	98 2f       	mov	r25, r24
 448:	90 71       	andi	r25, 0x10	; 16
 44a:	49 2f       	mov	r20, r25
 44c:	50 e0       	ldi	r21, 0x00	; 0
 44e:	55 95       	asr	r21
 450:	47 95       	ror	r20
 452:	55 95       	asr	r21
 454:	47 95       	ror	r20
 456:	55 95       	asr	r21
 458:	47 95       	ror	r20
 45a:	98 2f       	mov	r25, r24
 45c:	90 72       	andi	r25, 0x20	; 32
 45e:	29 2f       	mov	r18, r25
 460:	30 e0       	ldi	r19, 0x00	; 0
 462:	35 95       	asr	r19
 464:	27 95       	ror	r18
 466:	35 95       	asr	r19
 468:	27 95       	ror	r18
 46a:	35 95       	asr	r19
 46c:	27 95       	ror	r18
 46e:	96 2f       	mov	r25, r22
 470:	99 7f       	andi	r25, 0xF9	; 249
 472:	49 2b       	or	r20, r25
 474:	24 2b       	or	r18, r20
 476:	28 b9       	out	0x08, r18	; 8
 478:	9b b1       	in	r25, 0x0b	; 11
 47a:	91 60       	ori	r25, 0x01	; 1
 47c:	9b b9       	out	0x0b, r25	; 11
 47e:	ef e9       	ldi	r30, 0x9F	; 159
 480:	ff e0       	ldi	r31, 0x0F	; 15
 482:	31 97       	sbiw	r30, 0x01	; 1
 484:	f1 f7       	brne	.-4      	; 0x482 <LCDsendCommand+0x7a>
 486:	00 c0       	rjmp	.+0      	; 0x488 <LCDsendCommand+0x80>
 488:	00 00       	nop
 48a:	9b b1       	in	r25, 0x0b	; 11
 48c:	9e 7f       	andi	r25, 0xFE	; 254
 48e:	9b b9       	out	0x0b, r25	; 11
 490:	ef e9       	ldi	r30, 0x9F	; 159
 492:	ff e0       	ldi	r31, 0x0F	; 15
 494:	31 97       	sbiw	r30, 0x01	; 1
 496:	f1 f7       	brne	.-4      	; 0x494 <LCDsendCommand+0x8c>
 498:	00 c0       	rjmp	.+0      	; 0x49a <LCDsendCommand+0x92>
 49a:	00 00       	nop
 49c:	65 b1       	in	r22, 0x05	; 5
 49e:	f0 e1       	ldi	r31, 0x10	; 16
 4a0:	8f 9f       	mul	r24, r31
 4a2:	c0 01       	movw	r24, r0
 4a4:	11 24       	eor	r1, r1
 4a6:	ac 01       	movw	r20, r24
 4a8:	40 74       	andi	r20, 0x40	; 64
 4aa:	55 27       	eor	r21, r21
 4ac:	55 95       	asr	r21
 4ae:	47 95       	ror	r20
 4b0:	55 95       	asr	r21
 4b2:	47 95       	ror	r20
 4b4:	55 95       	asr	r21
 4b6:	47 95       	ror	r20
 4b8:	55 95       	asr	r21
 4ba:	47 95       	ror	r20
 4bc:	9c 01       	movw	r18, r24
 4be:	20 78       	andi	r18, 0x80	; 128
 4c0:	33 27       	eor	r19, r19
 4c2:	02 2e       	mov	r0, r18
 4c4:	23 2f       	mov	r18, r19
 4c6:	00 0c       	add	r0, r0
 4c8:	22 1f       	adc	r18, r18
 4ca:	33 0b       	sbc	r19, r19
 4cc:	00 0c       	add	r0, r0
 4ce:	22 1f       	adc	r18, r18
 4d0:	33 1f       	adc	r19, r19
 4d2:	36 2f       	mov	r19, r22
 4d4:	39 7f       	andi	r19, 0xF9	; 249
 4d6:	43 2b       	or	r20, r19
 4d8:	24 2b       	or	r18, r20
 4da:	25 b9       	out	0x05, r18	; 5
 4dc:	48 b1       	in	r20, 0x08	; 8
 4de:	9c 01       	movw	r18, r24
 4e0:	20 71       	andi	r18, 0x10	; 16
 4e2:	33 27       	eor	r19, r19
 4e4:	35 95       	asr	r19
 4e6:	27 95       	ror	r18
 4e8:	35 95       	asr	r19
 4ea:	27 95       	ror	r18
 4ec:	35 95       	asr	r19
 4ee:	27 95       	ror	r18
 4f0:	80 72       	andi	r24, 0x20	; 32
 4f2:	99 27       	eor	r25, r25
 4f4:	95 95       	asr	r25
 4f6:	87 95       	ror	r24
 4f8:	95 95       	asr	r25
 4fa:	87 95       	ror	r24
 4fc:	95 95       	asr	r25
 4fe:	87 95       	ror	r24
 500:	94 2f       	mov	r25, r20
 502:	99 7f       	andi	r25, 0xF9	; 249
 504:	29 2b       	or	r18, r25
 506:	82 2b       	or	r24, r18
 508:	88 b9       	out	0x08, r24	; 8
 50a:	8b b1       	in	r24, 0x0b	; 11
 50c:	81 60       	ori	r24, 0x01	; 1
 50e:	8b b9       	out	0x0b, r24	; 11
 510:	8f e9       	ldi	r24, 0x9F	; 159
 512:	9f e0       	ldi	r25, 0x0F	; 15
 514:	01 97       	sbiw	r24, 0x01	; 1
 516:	f1 f7       	brne	.-4      	; 0x514 <LCDsendCommand+0x10c>
 518:	00 c0       	rjmp	.+0      	; 0x51a <LCDsendCommand+0x112>
 51a:	00 00       	nop
 51c:	8b b1       	in	r24, 0x0b	; 11
 51e:	8e 7f       	andi	r24, 0xFE	; 254
 520:	8b b9       	out	0x0b, r24	; 11
 522:	ef e9       	ldi	r30, 0x9F	; 159
 524:	ff e0       	ldi	r31, 0x0F	; 15
 526:	31 97       	sbiw	r30, 0x01	; 1
 528:	f1 f7       	brne	.-4      	; 0x526 <LCDsendCommand+0x11e>
 52a:	00 c0       	rjmp	.+0      	; 0x52c <LCDsendCommand+0x124>
 52c:	00 00       	nop
 52e:	08 95       	ret

00000530 <LCDclr>:
 530:	81 e0       	ldi	r24, 0x01	; 1
 532:	0e 94 04 02 	call	0x408	; 0x408 <LCDsendCommand>
 536:	08 95       	ret

00000538 <LCDhome>:
 538:	82 e0       	ldi	r24, 0x02	; 2
 53a:	0e 94 04 02 	call	0x408	; 0x408 <LCDsendCommand>
 53e:	08 95       	ret

00000540 <LCDstring>:
 540:	0f 93       	push	r16
 542:	1f 93       	push	r17
 544:	cf 93       	push	r28
 546:	df 93       	push	r29
 548:	00 97       	sbiw	r24, 0x00	; 0
 54a:	69 f0       	breq	.+26     	; 0x566 <LCDstring+0x26>
 54c:	d6 2f       	mov	r29, r22
 54e:	8c 01       	movw	r16, r24
 550:	c0 e0       	ldi	r28, 0x00	; 0
 552:	07 c0       	rjmp	.+14     	; 0x562 <LCDstring+0x22>
 554:	f8 01       	movw	r30, r16
 556:	ec 0f       	add	r30, r28
 558:	f1 1d       	adc	r31, r1
 55a:	80 81       	ld	r24, Z
 55c:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <LCDsendChar>
 560:	cf 5f       	subi	r28, 0xFF	; 255
 562:	cd 17       	cp	r28, r29
 564:	b8 f3       	brcs	.-18     	; 0x554 <LCDstring+0x14>
 566:	df 91       	pop	r29
 568:	cf 91       	pop	r28
 56a:	1f 91       	pop	r17
 56c:	0f 91       	pop	r16
 56e:	08 95       	ret

00000570 <LCDGotoXY>:
 570:	62 30       	cpi	r22, 0x02	; 2
 572:	31 f0       	breq	.+12     	; 0x580 <LCDGotoXY+0x10>
 574:	63 30       	cpi	r22, 0x03	; 3
 576:	31 f0       	breq	.+12     	; 0x584 <LCDGotoXY+0x14>
 578:	61 30       	cpi	r22, 0x01	; 1
 57a:	29 f4       	brne	.+10     	; 0x586 <LCDGotoXY+0x16>
 57c:	80 5c       	subi	r24, 0xC0	; 192
 57e:	03 c0       	rjmp	.+6      	; 0x586 <LCDGotoXY+0x16>
 580:	8c 5e       	subi	r24, 0xEC	; 236
 582:	01 c0       	rjmp	.+2      	; 0x586 <LCDGotoXY+0x16>
 584:	8c 5a       	subi	r24, 0xAC	; 172
 586:	80 68       	ori	r24, 0x80	; 128
 588:	0e 94 04 02 	call	0x408	; 0x408 <LCDsendCommand>
 58c:	08 95       	ret

0000058e <LCDdefinechar>:
 58e:	ef 92       	push	r14
 590:	ff 92       	push	r15
 592:	0f 93       	push	r16
 594:	1f 93       	push	r17
 596:	cf 93       	push	r28
 598:	df 93       	push	r29
 59a:	7c 01       	movw	r14, r24
 59c:	86 2f       	mov	r24, r22
 59e:	90 e0       	ldi	r25, 0x00	; 0
 5a0:	88 0f       	add	r24, r24
 5a2:	99 1f       	adc	r25, r25
 5a4:	88 0f       	add	r24, r24
 5a6:	99 1f       	adc	r25, r25
 5a8:	88 0f       	add	r24, r24
 5aa:	99 1f       	adc	r25, r25
 5ac:	80 64       	ori	r24, 0x40	; 64
 5ae:	c0 e0       	ldi	r28, 0x00	; 0
 5b0:	d0 e0       	ldi	r29, 0x00	; 0
 5b2:	0d c0       	rjmp	.+26     	; 0x5ce <LCDdefinechar+0x40>
 5b4:	f7 01       	movw	r30, r14
 5b6:	ec 0f       	add	r30, r28
 5b8:	fd 1f       	adc	r31, r29
 5ba:	14 91       	lpm	r17, Z
 5bc:	01 e0       	ldi	r16, 0x01	; 1
 5be:	08 0f       	add	r16, r24
 5c0:	0e 94 04 02 	call	0x408	; 0x408 <LCDsendCommand>
 5c4:	81 2f       	mov	r24, r17
 5c6:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <LCDsendChar>
 5ca:	21 96       	adiw	r28, 0x01	; 1
 5cc:	80 2f       	mov	r24, r16
 5ce:	c8 30       	cpi	r28, 0x08	; 8
 5d0:	d1 05       	cpc	r29, r1
 5d2:	80 f3       	brcs	.-32     	; 0x5b4 <LCDdefinechar+0x26>
 5d4:	df 91       	pop	r29
 5d6:	cf 91       	pop	r28
 5d8:	1f 91       	pop	r17
 5da:	0f 91       	pop	r16
 5dc:	ff 90       	pop	r15
 5de:	ef 90       	pop	r14
 5e0:	08 95       	ret

000005e2 <LCDinit>:
 5e2:	cf 93       	push	r28
 5e4:	df 93       	push	r29
 5e6:	8f e5       	ldi	r24, 0x5F	; 95
 5e8:	9a ee       	ldi	r25, 0xEA	; 234
 5ea:	01 97       	sbiw	r24, 0x01	; 1
 5ec:	f1 f7       	brne	.-4      	; 0x5ea <LCDinit+0x8>
 5ee:	00 c0       	rjmp	.+0      	; 0x5f0 <LCDinit+0xe>
 5f0:	00 00       	nop
 5f2:	85 b1       	in	r24, 0x05	; 5
 5f4:	89 7f       	andi	r24, 0xF9	; 249
 5f6:	85 b9       	out	0x05, r24	; 5
 5f8:	88 b1       	in	r24, 0x08	; 8
 5fa:	89 7f       	andi	r24, 0xF9	; 249
 5fc:	88 b9       	out	0x08, r24	; 8
 5fe:	1b b8       	out	0x0b, r1	; 11
 600:	87 b1       	in	r24, 0x07	; 7
 602:	86 60       	ori	r24, 0x06	; 6
 604:	87 b9       	out	0x07, r24	; 7
 606:	84 b1       	in	r24, 0x04	; 4
 608:	86 60       	ori	r24, 0x06	; 6
 60a:	84 b9       	out	0x04, r24	; 4
 60c:	84 b1       	in	r24, 0x04	; 4
 60e:	86 60       	ori	r24, 0x06	; 6
 610:	84 b9       	out	0x04, r24	; 4
 612:	87 b1       	in	r24, 0x07	; 7
 614:	86 60       	ori	r24, 0x06	; 6
 616:	87 b9       	out	0x07, r24	; 7
 618:	8a b1       	in	r24, 0x0a	; 10
 61a:	83 60       	ori	r24, 0x03	; 3
 61c:	8a b9       	out	0x0a, r24	; 10
 61e:	85 b1       	in	r24, 0x05	; 5
 620:	89 7f       	andi	r24, 0xF9	; 249
 622:	85 b9       	out	0x05, r24	; 5
 624:	88 b1       	in	r24, 0x08	; 8
 626:	86 60       	ori	r24, 0x06	; 6
 628:	88 b9       	out	0x08, r24	; 8
 62a:	8b b1       	in	r24, 0x0b	; 11
 62c:	81 60       	ori	r24, 0x01	; 1
 62e:	8b b9       	out	0x0b, r24	; 11
 630:	8f e9       	ldi	r24, 0x9F	; 159
 632:	9f e0       	ldi	r25, 0x0F	; 15
 634:	01 97       	sbiw	r24, 0x01	; 1
 636:	f1 f7       	brne	.-4      	; 0x634 <LCDinit+0x52>
 638:	00 c0       	rjmp	.+0      	; 0x63a <LCDinit+0x58>
 63a:	00 00       	nop
 63c:	8b b1       	in	r24, 0x0b	; 11
 63e:	8e 7f       	andi	r24, 0xFE	; 254
 640:	8b b9       	out	0x0b, r24	; 11
 642:	8f e9       	ldi	r24, 0x9F	; 159
 644:	9f e0       	ldi	r25, 0x0F	; 15
 646:	01 97       	sbiw	r24, 0x01	; 1
 648:	f1 f7       	brne	.-4      	; 0x646 <LCDinit+0x64>
 64a:	00 c0       	rjmp	.+0      	; 0x64c <LCDinit+0x6a>
 64c:	00 00       	nop
 64e:	85 b1       	in	r24, 0x05	; 5
 650:	89 7f       	andi	r24, 0xF9	; 249
 652:	85 b9       	out	0x05, r24	; 5
 654:	88 b1       	in	r24, 0x08	; 8
 656:	86 60       	ori	r24, 0x06	; 6
 658:	88 b9       	out	0x08, r24	; 8
 65a:	8b b1       	in	r24, 0x0b	; 11
 65c:	81 60       	ori	r24, 0x01	; 1
 65e:	8b b9       	out	0x0b, r24	; 11
 660:	8f e9       	ldi	r24, 0x9F	; 159
 662:	9f e0       	ldi	r25, 0x0F	; 15
 664:	01 97       	sbiw	r24, 0x01	; 1
 666:	f1 f7       	brne	.-4      	; 0x664 <LCDinit+0x82>
 668:	00 c0       	rjmp	.+0      	; 0x66a <LCDinit+0x88>
 66a:	00 00       	nop
 66c:	8b b1       	in	r24, 0x0b	; 11
 66e:	8e 7f       	andi	r24, 0xFE	; 254
 670:	8b b9       	out	0x0b, r24	; 11
 672:	8f e9       	ldi	r24, 0x9F	; 159
 674:	9f e0       	ldi	r25, 0x0F	; 15
 676:	01 97       	sbiw	r24, 0x01	; 1
 678:	f1 f7       	brne	.-4      	; 0x676 <LCDinit+0x94>
 67a:	00 c0       	rjmp	.+0      	; 0x67c <LCDinit+0x9a>
 67c:	00 00       	nop
 67e:	85 b1       	in	r24, 0x05	; 5
 680:	89 7f       	andi	r24, 0xF9	; 249
 682:	85 b9       	out	0x05, r24	; 5
 684:	88 b1       	in	r24, 0x08	; 8
 686:	89 7f       	andi	r24, 0xF9	; 249
 688:	84 60       	ori	r24, 0x04	; 4
 68a:	88 b9       	out	0x08, r24	; 8
 68c:	8b b1       	in	r24, 0x0b	; 11
 68e:	81 60       	ori	r24, 0x01	; 1
 690:	8b b9       	out	0x0b, r24	; 11
 692:	8f e9       	ldi	r24, 0x9F	; 159
 694:	9f e0       	ldi	r25, 0x0F	; 15
 696:	01 97       	sbiw	r24, 0x01	; 1
 698:	f1 f7       	brne	.-4      	; 0x696 <LCDinit+0xb4>
 69a:	00 c0       	rjmp	.+0      	; 0x69c <LCDinit+0xba>
 69c:	00 00       	nop
 69e:	8b b1       	in	r24, 0x0b	; 11
 6a0:	8e 7f       	andi	r24, 0xFE	; 254
 6a2:	8b b9       	out	0x0b, r24	; 11
 6a4:	8f e9       	ldi	r24, 0x9F	; 159
 6a6:	9f e0       	ldi	r25, 0x0F	; 15
 6a8:	01 97       	sbiw	r24, 0x01	; 1
 6aa:	f1 f7       	brne	.-4      	; 0x6a8 <LCDinit+0xc6>
 6ac:	00 c0       	rjmp	.+0      	; 0x6ae <LCDinit+0xcc>
 6ae:	00 00       	nop
 6b0:	88 e2       	ldi	r24, 0x28	; 40
 6b2:	0e 94 04 02 	call	0x408	; 0x408 <LCDsendCommand>
 6b6:	8c e0       	ldi	r24, 0x0C	; 12
 6b8:	0e 94 04 02 	call	0x408	; 0x408 <LCDsendCommand>
 6bc:	60 e0       	ldi	r22, 0x00	; 0
 6be:	c0 e0       	ldi	r28, 0x00	; 0
 6c0:	0a c0       	rjmp	.+20     	; 0x6d6 <LCDinit+0xf4>
 6c2:	d1 e0       	ldi	r29, 0x01	; 1
 6c4:	d6 0f       	add	r29, r22
 6c6:	8c 2f       	mov	r24, r28
 6c8:	90 e0       	ldi	r25, 0x00	; 0
 6ca:	88 59       	subi	r24, 0x98	; 152
 6cc:	9f 4f       	sbci	r25, 0xFF	; 255
 6ce:	0e 94 c7 02 	call	0x58e	; 0x58e <LCDdefinechar>
 6d2:	c8 5f       	subi	r28, 0xF8	; 248
 6d4:	6d 2f       	mov	r22, r29
 6d6:	c0 34       	cpi	r28, 0x40	; 64
 6d8:	a0 f3       	brcs	.-24     	; 0x6c2 <LCDinit+0xe0>
 6da:	df 91       	pop	r29
 6dc:	cf 91       	pop	r28
 6de:	08 95       	ret

000006e0 <LCDescribeDato>:


//**********   Inicio de Comando Agregado por Fido

void LCDescribeDato(int val,unsigned int field_length)
{
 6e0:	ef 92       	push	r14
 6e2:	ff 92       	push	r15
 6e4:	0f 93       	push	r16
 6e6:	1f 93       	push	r17
 6e8:	cf 93       	push	r28
 6ea:	df 93       	push	r29
 6ec:	00 d0       	rcall	.+0      	; 0x6ee <LCDescribeDato+0xe>
 6ee:	00 d0       	rcall	.+0      	; 0x6f0 <LCDescribeDato+0x10>
 6f0:	1f 92       	push	r1
 6f2:	cd b7       	in	r28, 0x3d	; 61
 6f4:	de b7       	in	r29, 0x3e	; 62
 6f6:	7b 01       	movw	r14, r22
	2)unsigned int field_length :total length of field in which the value is printed
	must be between 1-5 if it is -1 the field length is no of digits in the val

	****************************************************************/

	char str[5]={0,0,0,0,0};
 6f8:	fe 01       	movw	r30, r28
 6fa:	31 96       	adiw	r30, 0x01	; 1
 6fc:	25 e0       	ldi	r18, 0x05	; 5
 6fe:	df 01       	movw	r26, r30
 700:	1d 92       	st	X+, r1
 702:	2a 95       	dec	r18
 704:	e9 f7       	brne	.-6      	; 0x700 <LCDescribeDato+0x20>
	int i=4,j=0;
 706:	24 e0       	ldi	r18, 0x04	; 4
 708:	30 e0       	ldi	r19, 0x00	; 0
	while(val)
 70a:	0f c0       	rjmp	.+30     	; 0x72a <LCDescribeDato+0x4a>
	{
	str[i]=val%10;
 70c:	6a e0       	ldi	r22, 0x0A	; 10
 70e:	70 e0       	ldi	r23, 0x00	; 0
 710:	0e 94 7e 05 	call	0xafc	; 0xafc <__divmodhi4>
 714:	e1 e0       	ldi	r30, 0x01	; 1
 716:	f0 e0       	ldi	r31, 0x00	; 0
 718:	ec 0f       	add	r30, r28
 71a:	fd 1f       	adc	r31, r29
 71c:	e2 0f       	add	r30, r18
 71e:	f3 1f       	adc	r31, r19
 720:	80 83       	st	Z, r24
	val=val/10;
 722:	86 2f       	mov	r24, r22
 724:	97 2f       	mov	r25, r23
	i--;
 726:	21 50       	subi	r18, 0x01	; 1
 728:	31 09       	sbc	r19, r1

	****************************************************************/

	char str[5]={0,0,0,0,0};
	int i=4,j=0;
	while(val)
 72a:	00 97       	sbiw	r24, 0x00	; 0
 72c:	79 f7       	brne	.-34     	; 0x70c <LCDescribeDato+0x2c>
	{
	str[i]=val%10;
	val=val/10;
	i--;
	}
	if(field_length==-1)
 72e:	bf ef       	ldi	r27, 0xFF	; 255
 730:	eb 16       	cp	r14, r27
 732:	fb 06       	cpc	r15, r27
 734:	81 f4       	brne	.+32     	; 0x756 <LCDescribeDato+0x76>
 736:	03 c0       	rjmp	.+6      	; 0x73e <LCDescribeDato+0x5e>
		while(str[j]==0) j++;
 738:	0f 5f       	subi	r16, 0xFF	; 255
 73a:	1f 4f       	sbci	r17, 0xFF	; 255
 73c:	02 c0       	rjmp	.+4      	; 0x742 <LCDescribeDato+0x62>
 73e:	00 e0       	ldi	r16, 0x00	; 0
 740:	10 e0       	ldi	r17, 0x00	; 0
 742:	e1 e0       	ldi	r30, 0x01	; 1
 744:	f0 e0       	ldi	r31, 0x00	; 0
 746:	ec 0f       	add	r30, r28
 748:	fd 1f       	adc	r31, r29
 74a:	e0 0f       	add	r30, r16
 74c:	f1 1f       	adc	r31, r17
 74e:	20 81       	ld	r18, Z
 750:	22 23       	and	r18, r18
 752:	91 f3       	breq	.-28     	; 0x738 <LCDescribeDato+0x58>
 754:	04 c0       	rjmp	.+8      	; 0x75e <LCDescribeDato+0x7e>
	else
		j=5-field_length;
 756:	05 e0       	ldi	r16, 0x05	; 5
 758:	10 e0       	ldi	r17, 0x00	; 0
 75a:	0e 19       	sub	r16, r14
 75c:	1f 09       	sbc	r17, r15

	if(val<0) LCDsendChar('-');
 75e:	99 23       	and	r25, r25
 760:	84 f4       	brge	.+32     	; 0x782 <LCDescribeDato+0xa2>
 762:	8d e2       	ldi	r24, 0x2D	; 45
 764:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <LCDsendChar>
 768:	0c c0       	rjmp	.+24     	; 0x782 <LCDescribeDato+0xa2>
	for(i=j;i<5;i++)
	{
	LCDsendChar(48+str[i]);
 76a:	e1 e0       	ldi	r30, 0x01	; 1
 76c:	f0 e0       	ldi	r31, 0x00	; 0
 76e:	ec 0f       	add	r30, r28
 770:	fd 1f       	adc	r31, r29
 772:	e0 0f       	add	r30, r16
 774:	f1 1f       	adc	r31, r17
 776:	80 81       	ld	r24, Z
 778:	80 5d       	subi	r24, 0xD0	; 208
 77a:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <LCDsendChar>
		while(str[j]==0) j++;
	else
		j=5-field_length;

	if(val<0) LCDsendChar('-');
	for(i=j;i<5;i++)
 77e:	0f 5f       	subi	r16, 0xFF	; 255
 780:	1f 4f       	sbci	r17, 0xFF	; 255
 782:	05 30       	cpi	r16, 0x05	; 5
 784:	11 05       	cpc	r17, r1
 786:	8c f3       	brlt	.-30     	; 0x76a <LCDescribeDato+0x8a>
	{
	LCDsendChar(48+str[i]);
	}
}
 788:	0f 90       	pop	r0
 78a:	0f 90       	pop	r0
 78c:	0f 90       	pop	r0
 78e:	0f 90       	pop	r0
 790:	0f 90       	pop	r0
 792:	df 91       	pop	r29
 794:	cf 91       	pop	r28
 796:	1f 91       	pop	r17
 798:	0f 91       	pop	r16
 79a:	ff 90       	pop	r15
 79c:	ef 90       	pop	r14
 79e:	08 95       	ret

000007a0 <main>:
 7a0:	80 e0       	ldi	r24, 0x00	; 0
 7a2:	90 e0       	ldi	r25, 0x00	; 0
 7a4:	0e 94 73 00 	call	0xe6	; 0xe6 <time>
 7a8:	cb 01       	movw	r24, r22
 7aa:	0e 94 06 06 	call	0xc0c	; 0xc0c <srand>
 7ae:	0e 94 07 04 	call	0x80e	; 0x80e <MEFinit>
 7b2:	0e 94 65 05 	call	0xaca	; 0xaca <TIMERinit>
 7b6:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <flagClk>
 7ba:	88 23       	and	r24, r24
 7bc:	21 f0       	breq	.+8      	; 0x7c6 <main+0x26>
 7be:	10 92 62 01 	sts	0x0162, r1	; 0x800162 <flagClk>
 7c2:	0e 94 48 05 	call	0xa90	; 0xa90 <RELOJupdate>
 7c6:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <flagMEF>
 7ca:	88 23       	and	r24, r24
 7cc:	a1 f3       	breq	.-24     	; 0x7b6 <main+0x16>
 7ce:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <flagMEF>
 7d2:	0e 94 ad 04 	call	0x95a	; 0x95a <MEFupdate>
 7d6:	ef cf       	rjmp	.-34     	; 0x7b6 <main+0x16>

000007d8 <__vector_11>:
 7d8:	1f 92       	push	r1
 7da:	0f 92       	push	r0
 7dc:	0f b6       	in	r0, 0x3f	; 63
 7de:	0f 92       	push	r0
 7e0:	11 24       	eor	r1, r1
 7e2:	8f 93       	push	r24
 7e4:	81 e0       	ldi	r24, 0x01	; 1
 7e6:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <flagMEF>
 7ea:	80 91 61 01 	lds	r24, 0x0161	; 0x800161 <count.2261>
 7ee:	8f 5f       	subi	r24, 0xFF	; 255
 7f0:	80 93 61 01 	sts	0x0161, r24	; 0x800161 <count.2261>
 7f4:	8a 30       	cpi	r24, 0x0A	; 10
 7f6:	29 f4       	brne	.+10     	; 0x802 <__DATA_REGION_LENGTH__+0x2>
 7f8:	10 92 61 01 	sts	0x0161, r1	; 0x800161 <count.2261>
 7fc:	81 e0       	ldi	r24, 0x01	; 1
 7fe:	80 93 62 01 	sts	0x0162, r24	; 0x800162 <flagClk>
 802:	8f 91       	pop	r24
 804:	0f 90       	pop	r0
 806:	0f be       	out	0x3f, r0	; 63
 808:	0f 90       	pop	r0
 80a:	1f 90       	pop	r1
 80c:	18 95       	reti

0000080e <MEFinit>:
 80e:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <LCDinit>
 812:	0e 94 98 02 	call	0x530	; 0x530 <LCDclr>
 816:	0e 94 9c 02 	call	0x538	; 0x538 <LCDhome>
 81a:	0e 94 86 00 	call	0x10c	; 0x10c <KEYPAD_Init>
 81e:	10 92 66 01 	sts	0x0166, r1	; 0x800166 <estado>
 822:	08 95       	ret

00000824 <actualizarLCD>:
 824:	cf 93       	push	r28
 826:	df 93       	push	r29
 828:	0e 94 98 02 	call	0x530	; 0x530 <LCDclr>
 82c:	60 e0       	ldi	r22, 0x00	; 0
 82e:	80 e0       	ldi	r24, 0x00	; 0
 830:	0e 94 b8 02 	call	0x570	; 0x570 <LCDGotoXY>
 834:	80 91 66 01 	lds	r24, 0x0166	; 0x800166 <estado>
 838:	82 30       	cpi	r24, 0x02	; 2
 83a:	91 f1       	breq	.+100    	; 0x8a0 <actualizarLCD+0x7c>
 83c:	28 f4       	brcc	.+10     	; 0x848 <actualizarLCD+0x24>
 83e:	88 23       	and	r24, r24
 840:	51 f0       	breq	.+20     	; 0x856 <actualizarLCD+0x32>
 842:	81 30       	cpi	r24, 0x01	; 1
 844:	b9 f0       	breq	.+46     	; 0x874 <actualizarLCD+0x50>
 846:	86 c0       	rjmp	.+268    	; 0x954 <__stack+0x55>
 848:	83 30       	cpi	r24, 0x03	; 3
 84a:	09 f4       	brne	.+2      	; 0x84e <actualizarLCD+0x2a>
 84c:	42 c0       	rjmp	.+132    	; 0x8d2 <actualizarLCD+0xae>
 84e:	84 30       	cpi	r24, 0x04	; 4
 850:	09 f4       	brne	.+2      	; 0x854 <actualizarLCD+0x30>
 852:	58 c0       	rjmp	.+176    	; 0x904 <__stack+0x5>
 854:	7f c0       	rjmp	.+254    	; 0x954 <__stack+0x55>
 856:	6a e0       	ldi	r22, 0x0A	; 10
 858:	8f e1       	ldi	r24, 0x1F	; 31
 85a:	91 e0       	ldi	r25, 0x01	; 1
 85c:	0e 94 a0 02 	call	0x540	; 0x540 <LCDstring>
 860:	61 e0       	ldi	r22, 0x01	; 1
 862:	80 e0       	ldi	r24, 0x00	; 0
 864:	0e 94 b8 02 	call	0x570	; 0x570 <LCDGotoXY>
 868:	60 e1       	ldi	r22, 0x10	; 16
 86a:	8a e2       	ldi	r24, 0x2A	; 42
 86c:	91 e0       	ldi	r25, 0x01	; 1
 86e:	0e 94 a0 02 	call	0x540	; 0x540 <LCDstring>
 872:	70 c0       	rjmp	.+224    	; 0x954 <__stack+0x55>
 874:	67 e0       	ldi	r22, 0x07	; 7
 876:	8b e3       	ldi	r24, 0x3B	; 59
 878:	91 e0       	ldi	r25, 0x01	; 1
 87a:	0e 94 a0 02 	call	0x540	; 0x540 <LCDstring>
 87e:	61 e0       	ldi	r22, 0x01	; 1
 880:	80 e0       	ldi	r24, 0x00	; 0
 882:	0e 94 b8 02 	call	0x570	; 0x570 <LCDGotoXY>
 886:	6c e0       	ldi	r22, 0x0C	; 12
 888:	83 e4       	ldi	r24, 0x43	; 67
 88a:	91 e0       	ldi	r25, 0x01	; 1
 88c:	0e 94 a0 02 	call	0x540	; 0x540 <LCDstring>
 890:	80 91 69 01 	lds	r24, 0x0169	; 0x800169 <num>
 894:	62 e0       	ldi	r22, 0x02	; 2
 896:	70 e0       	ldi	r23, 0x00	; 0
 898:	90 e0       	ldi	r25, 0x00	; 0
 89a:	0e 94 70 03 	call	0x6e0	; 0x6e0 <LCDescribeDato>
 89e:	5a c0       	rjmp	.+180    	; 0x954 <__stack+0x55>
 8a0:	67 e0       	ldi	r22, 0x07	; 7
 8a2:	8b e3       	ldi	r24, 0x3B	; 59
 8a4:	91 e0       	ldi	r25, 0x01	; 1
 8a6:	0e 94 a0 02 	call	0x540	; 0x540 <LCDstring>
 8aa:	61 e0       	ldi	r22, 0x01	; 1
 8ac:	80 e0       	ldi	r24, 0x00	; 0
 8ae:	0e 94 b8 02 	call	0x570	; 0x570 <LCDGotoXY>
 8b2:	6c e0       	ldi	r22, 0x0C	; 12
 8b4:	83 e4       	ldi	r24, 0x43	; 67
 8b6:	91 e0       	ldi	r25, 0x01	; 1
 8b8:	0e 94 a0 02 	call	0x540	; 0x540 <LCDstring>
 8bc:	80 91 69 01 	lds	r24, 0x0169	; 0x800169 <num>
 8c0:	62 e0       	ldi	r22, 0x02	; 2
 8c2:	70 e0       	ldi	r23, 0x00	; 0
 8c4:	90 e0       	ldi	r25, 0x00	; 0
 8c6:	0e 94 70 03 	call	0x6e0	; 0x6e0 <LCDescribeDato>
 8ca:	8c e3       	ldi	r24, 0x3C	; 60
 8cc:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <LCDsendChar>
 8d0:	41 c0       	rjmp	.+130    	; 0x954 <__stack+0x55>
 8d2:	67 e0       	ldi	r22, 0x07	; 7
 8d4:	8b e3       	ldi	r24, 0x3B	; 59
 8d6:	91 e0       	ldi	r25, 0x01	; 1
 8d8:	0e 94 a0 02 	call	0x540	; 0x540 <LCDstring>
 8dc:	61 e0       	ldi	r22, 0x01	; 1
 8de:	80 e0       	ldi	r24, 0x00	; 0
 8e0:	0e 94 b8 02 	call	0x570	; 0x570 <LCDGotoXY>
 8e4:	6c e0       	ldi	r22, 0x0C	; 12
 8e6:	83 e4       	ldi	r24, 0x43	; 67
 8e8:	91 e0       	ldi	r25, 0x01	; 1
 8ea:	0e 94 a0 02 	call	0x540	; 0x540 <LCDstring>
 8ee:	80 91 69 01 	lds	r24, 0x0169	; 0x800169 <num>
 8f2:	62 e0       	ldi	r22, 0x02	; 2
 8f4:	70 e0       	ldi	r23, 0x00	; 0
 8f6:	90 e0       	ldi	r25, 0x00	; 0
 8f8:	0e 94 70 03 	call	0x6e0	; 0x6e0 <LCDescribeDato>
 8fc:	8e e3       	ldi	r24, 0x3E	; 62
 8fe:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <LCDsendChar>
 902:	28 c0       	rjmp	.+80     	; 0x954 <__stack+0x55>
 904:	67 e0       	ldi	r22, 0x07	; 7
 906:	80 e5       	ldi	r24, 0x50	; 80
 908:	91 e0       	ldi	r25, 0x01	; 1
 90a:	0e 94 a0 02 	call	0x540	; 0x540 <LCDstring>
 90e:	61 e0       	ldi	r22, 0x01	; 1
 910:	80 e0       	ldi	r24, 0x00	; 0
 912:	0e 94 b8 02 	call	0x570	; 0x570 <LCDGotoXY>
 916:	66 e0       	ldi	r22, 0x06	; 6
 918:	88 e5       	ldi	r24, 0x58	; 88
 91a:	91 e0       	ldi	r25, 0x01	; 1
 91c:	0e 94 a0 02 	call	0x540	; 0x540 <LCDstring>
 920:	c3 e6       	ldi	r28, 0x63	; 99
 922:	d1 e0       	ldi	r29, 0x01	; 1
 924:	88 81       	ld	r24, Y
 926:	62 e0       	ldi	r22, 0x02	; 2
 928:	70 e0       	ldi	r23, 0x00	; 0
 92a:	90 e0       	ldi	r25, 0x00	; 0
 92c:	0e 94 70 03 	call	0x6e0	; 0x6e0 <LCDescribeDato>
 930:	8a e3       	ldi	r24, 0x3A	; 58
 932:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <LCDsendChar>
 936:	89 81       	ldd	r24, Y+1	; 0x01
 938:	62 e0       	ldi	r22, 0x02	; 2
 93a:	70 e0       	ldi	r23, 0x00	; 0
 93c:	90 e0       	ldi	r25, 0x00	; 0
 93e:	0e 94 70 03 	call	0x6e0	; 0x6e0 <LCDescribeDato>
 942:	8a e3       	ldi	r24, 0x3A	; 58
 944:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <LCDsendChar>
 948:	8a 81       	ldd	r24, Y+2	; 0x02
 94a:	62 e0       	ldi	r22, 0x02	; 2
 94c:	70 e0       	ldi	r23, 0x00	; 0
 94e:	90 e0       	ldi	r25, 0x00	; 0
 950:	0e 94 70 03 	call	0x6e0	; 0x6e0 <LCDescribeDato>
 954:	df 91       	pop	r29
 956:	cf 91       	pop	r28
 958:	08 95       	ret

0000095a <MEFupdate>:
 95a:	80 91 66 01 	lds	r24, 0x0166	; 0x800166 <estado>
 95e:	84 30       	cpi	r24, 0x04	; 4
 960:	69 f4       	brne	.+26     	; 0x97c <MEFupdate+0x22>
 962:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <count>
 966:	81 11       	cpse	r24, r1
 968:	06 c0       	rjmp	.+12     	; 0x976 <MEFupdate+0x1c>
 96a:	8e e1       	ldi	r24, 0x1E	; 30
 96c:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <count>
 970:	10 92 66 01 	sts	0x0166, r1	; 0x800166 <estado>
 974:	03 c0       	rjmp	.+6      	; 0x97c <MEFupdate+0x22>
 976:	81 50       	subi	r24, 0x01	; 1
 978:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <count>
 97c:	88 e6       	ldi	r24, 0x68	; 104
 97e:	91 e0       	ldi	r25, 0x01	; 1
 980:	0e 94 3f 01 	call	0x27e	; 0x27e <KEYPAD_Scan>
 984:	88 23       	and	r24, r24
 986:	09 f4       	brne	.+2      	; 0x98a <MEFupdate+0x30>
 988:	7a c0       	rjmp	.+244    	; 0xa7e <MEFupdate+0x124>
 98a:	80 91 66 01 	lds	r24, 0x0166	; 0x800166 <estado>
 98e:	81 30       	cpi	r24, 0x01	; 1
 990:	e1 f0       	breq	.+56     	; 0x9ca <MEFupdate+0x70>
 992:	20 f0       	brcs	.+8      	; 0x99c <MEFupdate+0x42>
 994:	84 30       	cpi	r24, 0x04	; 4
 996:	08 f0       	brcs	.+2      	; 0x99a <MEFupdate+0x40>
 998:	72 c0       	rjmp	.+228    	; 0xa7e <MEFupdate+0x124>
 99a:	57 c0       	rjmp	.+174    	; 0xa4a <MEFupdate+0xf0>
 99c:	80 91 68 01 	lds	r24, 0x0168	; 0x800168 <pkey>
 9a0:	81 34       	cpi	r24, 0x41	; 65
 9a2:	09 f0       	breq	.+2      	; 0x9a6 <MEFupdate+0x4c>
 9a4:	6c c0       	rjmp	.+216    	; 0xa7e <MEFupdate+0x124>
 9a6:	10 92 69 01 	sts	0x0169, r1	; 0x800169 <num>
 9aa:	10 92 67 01 	sts	0x0167, r1	; 0x800167 <aux>
 9ae:	0e 94 42 05 	call	0xa84	; 0xa84 <RELOJinit>
 9b2:	0e 94 01 06 	call	0xc02	; 0xc02 <rand>
 9b6:	64 e6       	ldi	r22, 0x64	; 100
 9b8:	70 e0       	ldi	r23, 0x00	; 0
 9ba:	0e 94 7e 05 	call	0xafc	; 0xafc <__divmodhi4>
 9be:	80 93 6a 01 	sts	0x016A, r24	; 0x80016a <num_to_guess>
 9c2:	81 e0       	ldi	r24, 0x01	; 1
 9c4:	80 93 66 01 	sts	0x0166, r24	; 0x800166 <estado>
 9c8:	5a c0       	rjmp	.+180    	; 0xa7e <MEFupdate+0x124>
 9ca:	80 91 68 01 	lds	r24, 0x0168	; 0x800168 <pkey>
 9ce:	8a 32       	cpi	r24, 0x2A	; 42
 9d0:	19 f1       	breq	.+70     	; 0xa18 <MEFupdate+0xbe>
 9d2:	84 34       	cpi	r24, 0x44	; 68
 9d4:	f1 f0       	breq	.+60     	; 0xa12 <MEFupdate+0xb8>
 9d6:	83 32       	cpi	r24, 0x23	; 35
 9d8:	21 f5       	brne	.+72     	; 0xa22 <MEFupdate+0xc8>
 9da:	90 91 69 01 	lds	r25, 0x0169	; 0x800169 <num>
 9de:	80 91 6a 01 	lds	r24, 0x016A	; 0x80016a <num_to_guess>
 9e2:	98 13       	cpse	r25, r24
 9e4:	0c c0       	rjmp	.+24     	; 0x9fe <MEFupdate+0xa4>
 9e6:	84 e0       	ldi	r24, 0x04	; 4
 9e8:	80 93 66 01 	sts	0x0166, r24	; 0x800166 <estado>
 9ec:	0e 94 5e 05 	call	0xabc	; 0xabc <RELOJgetTime>
 9f0:	60 93 63 01 	sts	0x0163, r22	; 0x800163 <tiempo>
 9f4:	70 93 64 01 	sts	0x0164, r23	; 0x800164 <tiempo+0x1>
 9f8:	80 93 65 01 	sts	0x0165, r24	; 0x800165 <tiempo+0x2>
 9fc:	40 c0       	rjmp	.+128    	; 0xa7e <MEFupdate+0x124>
 9fe:	89 17       	cp	r24, r25
 a00:	20 f4       	brcc	.+8      	; 0xa0a <MEFupdate+0xb0>
 a02:	82 e0       	ldi	r24, 0x02	; 2
 a04:	80 93 66 01 	sts	0x0166, r24	; 0x800166 <estado>
 a08:	3a c0       	rjmp	.+116    	; 0xa7e <MEFupdate+0x124>
 a0a:	83 e0       	ldi	r24, 0x03	; 3
 a0c:	80 93 66 01 	sts	0x0166, r24	; 0x800166 <estado>
 a10:	36 c0       	rjmp	.+108    	; 0xa7e <MEFupdate+0x124>
 a12:	10 92 66 01 	sts	0x0166, r1	; 0x800166 <estado>
 a16:	33 c0       	rjmp	.+102    	; 0xa7e <MEFupdate+0x124>
 a18:	10 92 69 01 	sts	0x0169, r1	; 0x800169 <num>
 a1c:	10 92 67 01 	sts	0x0167, r1	; 0x800167 <aux>
 a20:	2e c0       	rjmp	.+92     	; 0xa7e <MEFupdate+0x124>
 a22:	90 91 67 01 	lds	r25, 0x0167	; 0x800167 <aux>
 a26:	92 30       	cpi	r25, 0x02	; 2
 a28:	51 f1       	breq	.+84     	; 0xa7e <MEFupdate+0x124>
 a2a:	8a 30       	cpi	r24, 0x0A	; 10
 a2c:	40 f5       	brcc	.+80     	; 0xa7e <MEFupdate+0x124>
 a2e:	20 91 69 01 	lds	r18, 0x0169	; 0x800169 <num>
 a32:	22 0f       	add	r18, r18
 a34:	32 2f       	mov	r19, r18
 a36:	33 0f       	add	r19, r19
 a38:	33 0f       	add	r19, r19
 a3a:	23 0f       	add	r18, r19
 a3c:	82 0f       	add	r24, r18
 a3e:	80 93 69 01 	sts	0x0169, r24	; 0x800169 <num>
 a42:	9f 5f       	subi	r25, 0xFF	; 255
 a44:	90 93 67 01 	sts	0x0167, r25	; 0x800167 <aux>
 a48:	1a c0       	rjmp	.+52     	; 0xa7e <MEFupdate+0x124>
 a4a:	80 91 68 01 	lds	r24, 0x0168	; 0x800168 <pkey>
 a4e:	84 34       	cpi	r24, 0x44	; 68
 a50:	19 f4       	brne	.+6      	; 0xa58 <MEFupdate+0xfe>
 a52:	10 92 66 01 	sts	0x0166, r1	; 0x800166 <estado>
 a56:	13 c0       	rjmp	.+38     	; 0xa7e <MEFupdate+0x124>
 a58:	8a 32       	cpi	r24, 0x2A	; 42
 a5a:	41 f4       	brne	.+16     	; 0xa6c <MEFupdate+0x112>
 a5c:	10 92 69 01 	sts	0x0169, r1	; 0x800169 <num>
 a60:	10 92 67 01 	sts	0x0167, r1	; 0x800167 <aux>
 a64:	81 e0       	ldi	r24, 0x01	; 1
 a66:	80 93 66 01 	sts	0x0166, r24	; 0x800166 <estado>
 a6a:	09 c0       	rjmp	.+18     	; 0xa7e <MEFupdate+0x124>
 a6c:	8a 30       	cpi	r24, 0x0A	; 10
 a6e:	38 f4       	brcc	.+14     	; 0xa7e <MEFupdate+0x124>
 a70:	80 93 69 01 	sts	0x0169, r24	; 0x800169 <num>
 a74:	81 e0       	ldi	r24, 0x01	; 1
 a76:	80 93 67 01 	sts	0x0167, r24	; 0x800167 <aux>
 a7a:	80 93 66 01 	sts	0x0166, r24	; 0x800166 <estado>
 a7e:	0e 94 12 04 	call	0x824	; 0x824 <actualizarLCD>
 a82:	08 95       	ret

00000a84 <RELOJinit>:
#include "reloj.h"

hora actual;

void RELOJinit(){	
	actual.hour= 0;//Inicializa los segundos del reloj 
 a84:	eb e6       	ldi	r30, 0x6B	; 107
 a86:	f1 e0       	ldi	r31, 0x01	; 1
 a88:	10 82       	st	Z, r1
	actual.min= 0;//Inicializa los minutos del reloj 
 a8a:	11 82       	std	Z+1, r1	; 0x01
	actual.sec= 0;//Inicializa las horas de reloj
 a8c:	12 82       	std	Z+2, r1	; 0x02
 a8e:	08 95       	ret

00000a90 <RELOJupdate>:
}


void RELOJupdate(){
	if(++actual.sec == 60){
 a90:	eb e6       	ldi	r30, 0x6B	; 107
 a92:	f1 e0       	ldi	r31, 0x01	; 1
 a94:	82 81       	ldd	r24, Z+2	; 0x02
 a96:	8f 5f       	subi	r24, 0xFF	; 255
 a98:	82 83       	std	Z+2, r24	; 0x02
 a9a:	8c 33       	cpi	r24, 0x3C	; 60
 a9c:	71 f4       	brne	.+28     	; 0xaba <RELOJupdate+0x2a>
		actual.sec=0;//Actualiza los segundos del reloj
 a9e:	12 82       	std	Z+2, r1	; 0x02
		if (++actual.min == 60){
 aa0:	81 81       	ldd	r24, Z+1	; 0x01
 aa2:	8f 5f       	subi	r24, 0xFF	; 255
 aa4:	81 83       	std	Z+1, r24	; 0x01
 aa6:	8c 33       	cpi	r24, 0x3C	; 60
 aa8:	41 f4       	brne	.+16     	; 0xaba <RELOJupdate+0x2a>
			actual.min=0;//Actualiza los minutos del reloj
 aaa:	11 82       	std	Z+1, r1	; 0x01
			if(++actual.hour == 24){
 aac:	80 81       	ld	r24, Z
 aae:	8f 5f       	subi	r24, 0xFF	; 255
 ab0:	80 83       	st	Z, r24
 ab2:	88 31       	cpi	r24, 0x18	; 24
 ab4:	11 f4       	brne	.+4      	; 0xaba <RELOJupdate+0x2a>
				actual.hour = 0;//Actualiza las horas del reloj
 ab6:	10 92 6b 01 	sts	0x016B, r1	; 0x80016b <actual>
 aba:	08 95       	ret

00000abc <RELOJgetTime>:
	}
}


hora RELOJgetTime(){
	return actual; //Devuele el valor actual de la hora
 abc:	60 91 6b 01 	lds	r22, 0x016B	; 0x80016b <actual>
 ac0:	70 91 6c 01 	lds	r23, 0x016C	; 0x80016c <actual+0x1>
 ac4:	80 91 6d 01 	lds	r24, 0x016D	; 0x80016d <actual+0x2>
 ac8:	08 95       	ret

00000aca <TIMERinit>:
 aca:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
 ace:	e1 e8       	ldi	r30, 0x81	; 129
 ad0:	f0 e0       	ldi	r31, 0x00	; 0
 ad2:	10 82       	st	Z, r1
 ad4:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
 ad8:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
 adc:	80 81       	ld	r24, Z
 ade:	8b 60       	ori	r24, 0x0B	; 11
 ae0:	80 83       	st	Z, r24
 ae2:	88 ea       	ldi	r24, 0xA8	; 168
 ae4:	91 e6       	ldi	r25, 0x61	; 97
 ae6:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
 aea:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
 aee:	ef e6       	ldi	r30, 0x6F	; 111
 af0:	f0 e0       	ldi	r31, 0x00	; 0
 af2:	80 81       	ld	r24, Z
 af4:	82 60       	ori	r24, 0x02	; 2
 af6:	80 83       	st	Z, r24
 af8:	78 94       	sei
 afa:	08 95       	ret

00000afc <__divmodhi4>:
 afc:	97 fb       	bst	r25, 7
 afe:	07 2e       	mov	r0, r23
 b00:	16 f4       	brtc	.+4      	; 0xb06 <__divmodhi4+0xa>
 b02:	00 94       	com	r0
 b04:	07 d0       	rcall	.+14     	; 0xb14 <__divmodhi4_neg1>
 b06:	77 fd       	sbrc	r23, 7
 b08:	09 d0       	rcall	.+18     	; 0xb1c <__divmodhi4_neg2>
 b0a:	0e 94 a1 05 	call	0xb42	; 0xb42 <__udivmodhi4>
 b0e:	07 fc       	sbrc	r0, 7
 b10:	05 d0       	rcall	.+10     	; 0xb1c <__divmodhi4_neg2>
 b12:	3e f4       	brtc	.+14     	; 0xb22 <__divmodhi4_exit>

00000b14 <__divmodhi4_neg1>:
 b14:	90 95       	com	r25
 b16:	81 95       	neg	r24
 b18:	9f 4f       	sbci	r25, 0xFF	; 255
 b1a:	08 95       	ret

00000b1c <__divmodhi4_neg2>:
 b1c:	70 95       	com	r23
 b1e:	61 95       	neg	r22
 b20:	7f 4f       	sbci	r23, 0xFF	; 255

00000b22 <__divmodhi4_exit>:
 b22:	08 95       	ret

00000b24 <__umulhisi3>:
 b24:	a2 9f       	mul	r26, r18
 b26:	b0 01       	movw	r22, r0
 b28:	b3 9f       	mul	r27, r19
 b2a:	c0 01       	movw	r24, r0
 b2c:	a3 9f       	mul	r26, r19
 b2e:	70 0d       	add	r23, r0
 b30:	81 1d       	adc	r24, r1
 b32:	11 24       	eor	r1, r1
 b34:	91 1d       	adc	r25, r1
 b36:	b2 9f       	mul	r27, r18
 b38:	70 0d       	add	r23, r0
 b3a:	81 1d       	adc	r24, r1
 b3c:	11 24       	eor	r1, r1
 b3e:	91 1d       	adc	r25, r1
 b40:	08 95       	ret

00000b42 <__udivmodhi4>:
 b42:	aa 1b       	sub	r26, r26
 b44:	bb 1b       	sub	r27, r27
 b46:	51 e1       	ldi	r21, 0x11	; 17
 b48:	07 c0       	rjmp	.+14     	; 0xb58 <__udivmodhi4_ep>

00000b4a <__udivmodhi4_loop>:
 b4a:	aa 1f       	adc	r26, r26
 b4c:	bb 1f       	adc	r27, r27
 b4e:	a6 17       	cp	r26, r22
 b50:	b7 07       	cpc	r27, r23
 b52:	10 f0       	brcs	.+4      	; 0xb58 <__udivmodhi4_ep>
 b54:	a6 1b       	sub	r26, r22
 b56:	b7 0b       	sbc	r27, r23

00000b58 <__udivmodhi4_ep>:
 b58:	88 1f       	adc	r24, r24
 b5a:	99 1f       	adc	r25, r25
 b5c:	5a 95       	dec	r21
 b5e:	a9 f7       	brne	.-22     	; 0xb4a <__udivmodhi4_loop>
 b60:	80 95       	com	r24
 b62:	90 95       	com	r25
 b64:	bc 01       	movw	r22, r24
 b66:	cd 01       	movw	r24, r26
 b68:	08 95       	ret

00000b6a <do_rand>:
 b6a:	8f 92       	push	r8
 b6c:	9f 92       	push	r9
 b6e:	af 92       	push	r10
 b70:	bf 92       	push	r11
 b72:	cf 92       	push	r12
 b74:	df 92       	push	r13
 b76:	ef 92       	push	r14
 b78:	ff 92       	push	r15
 b7a:	cf 93       	push	r28
 b7c:	df 93       	push	r29
 b7e:	ec 01       	movw	r28, r24
 b80:	68 81       	ld	r22, Y
 b82:	79 81       	ldd	r23, Y+1	; 0x01
 b84:	8a 81       	ldd	r24, Y+2	; 0x02
 b86:	9b 81       	ldd	r25, Y+3	; 0x03
 b88:	61 15       	cp	r22, r1
 b8a:	71 05       	cpc	r23, r1
 b8c:	81 05       	cpc	r24, r1
 b8e:	91 05       	cpc	r25, r1
 b90:	21 f4       	brne	.+8      	; 0xb9a <do_rand+0x30>
 b92:	64 e2       	ldi	r22, 0x24	; 36
 b94:	79 ed       	ldi	r23, 0xD9	; 217
 b96:	8b e5       	ldi	r24, 0x5B	; 91
 b98:	97 e0       	ldi	r25, 0x07	; 7
 b9a:	2d e1       	ldi	r18, 0x1D	; 29
 b9c:	33 ef       	ldi	r19, 0xF3	; 243
 b9e:	41 e0       	ldi	r20, 0x01	; 1
 ba0:	50 e0       	ldi	r21, 0x00	; 0
 ba2:	0e 94 11 06 	call	0xc22	; 0xc22 <__divmodsi4>
 ba6:	49 01       	movw	r8, r18
 ba8:	5a 01       	movw	r10, r20
 baa:	9b 01       	movw	r18, r22
 bac:	ac 01       	movw	r20, r24
 bae:	a7 ea       	ldi	r26, 0xA7	; 167
 bb0:	b1 e4       	ldi	r27, 0x41	; 65
 bb2:	0e 94 30 06 	call	0xc60	; 0xc60 <__muluhisi3>
 bb6:	6b 01       	movw	r12, r22
 bb8:	7c 01       	movw	r14, r24
 bba:	ac ee       	ldi	r26, 0xEC	; 236
 bbc:	b4 ef       	ldi	r27, 0xF4	; 244
 bbe:	a5 01       	movw	r20, r10
 bc0:	94 01       	movw	r18, r8
 bc2:	0e 94 3e 06 	call	0xc7c	; 0xc7c <__mulohisi3>
 bc6:	dc 01       	movw	r26, r24
 bc8:	cb 01       	movw	r24, r22
 bca:	8c 0d       	add	r24, r12
 bcc:	9d 1d       	adc	r25, r13
 bce:	ae 1d       	adc	r26, r14
 bd0:	bf 1d       	adc	r27, r15
 bd2:	b7 ff       	sbrs	r27, 7
 bd4:	03 c0       	rjmp	.+6      	; 0xbdc <do_rand+0x72>
 bd6:	01 97       	sbiw	r24, 0x01	; 1
 bd8:	a1 09       	sbc	r26, r1
 bda:	b0 48       	sbci	r27, 0x80	; 128
 bdc:	88 83       	st	Y, r24
 bde:	99 83       	std	Y+1, r25	; 0x01
 be0:	aa 83       	std	Y+2, r26	; 0x02
 be2:	bb 83       	std	Y+3, r27	; 0x03
 be4:	9f 77       	andi	r25, 0x7F	; 127
 be6:	df 91       	pop	r29
 be8:	cf 91       	pop	r28
 bea:	ff 90       	pop	r15
 bec:	ef 90       	pop	r14
 bee:	df 90       	pop	r13
 bf0:	cf 90       	pop	r12
 bf2:	bf 90       	pop	r11
 bf4:	af 90       	pop	r10
 bf6:	9f 90       	pop	r9
 bf8:	8f 90       	pop	r8
 bfa:	08 95       	ret

00000bfc <rand_r>:
 bfc:	0e 94 b5 05 	call	0xb6a	; 0xb6a <do_rand>
 c00:	08 95       	ret

00000c02 <rand>:
 c02:	80 e0       	ldi	r24, 0x00	; 0
 c04:	91 e0       	ldi	r25, 0x01	; 1
 c06:	0e 94 b5 05 	call	0xb6a	; 0xb6a <do_rand>
 c0a:	08 95       	ret

00000c0c <srand>:
 c0c:	a0 e0       	ldi	r26, 0x00	; 0
 c0e:	b0 e0       	ldi	r27, 0x00	; 0
 c10:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 c14:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 c18:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 c1c:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 c20:	08 95       	ret

00000c22 <__divmodsi4>:
 c22:	05 2e       	mov	r0, r21
 c24:	97 fb       	bst	r25, 7
 c26:	1e f4       	brtc	.+6      	; 0xc2e <__divmodsi4+0xc>
 c28:	00 94       	com	r0
 c2a:	0e 94 28 06 	call	0xc50	; 0xc50 <__negsi2>
 c2e:	57 fd       	sbrc	r21, 7
 c30:	07 d0       	rcall	.+14     	; 0xc40 <__divmodsi4_neg2>
 c32:	0e 94 43 06 	call	0xc86	; 0xc86 <__udivmodsi4>
 c36:	07 fc       	sbrc	r0, 7
 c38:	03 d0       	rcall	.+6      	; 0xc40 <__divmodsi4_neg2>
 c3a:	4e f4       	brtc	.+18     	; 0xc4e <__divmodsi4_exit>
 c3c:	0c 94 28 06 	jmp	0xc50	; 0xc50 <__negsi2>

00000c40 <__divmodsi4_neg2>:
 c40:	50 95       	com	r21
 c42:	40 95       	com	r20
 c44:	30 95       	com	r19
 c46:	21 95       	neg	r18
 c48:	3f 4f       	sbci	r19, 0xFF	; 255
 c4a:	4f 4f       	sbci	r20, 0xFF	; 255
 c4c:	5f 4f       	sbci	r21, 0xFF	; 255

00000c4e <__divmodsi4_exit>:
 c4e:	08 95       	ret

00000c50 <__negsi2>:
 c50:	90 95       	com	r25
 c52:	80 95       	com	r24
 c54:	70 95       	com	r23
 c56:	61 95       	neg	r22
 c58:	7f 4f       	sbci	r23, 0xFF	; 255
 c5a:	8f 4f       	sbci	r24, 0xFF	; 255
 c5c:	9f 4f       	sbci	r25, 0xFF	; 255
 c5e:	08 95       	ret

00000c60 <__muluhisi3>:
 c60:	0e 94 92 05 	call	0xb24	; 0xb24 <__umulhisi3>
 c64:	a5 9f       	mul	r26, r21
 c66:	90 0d       	add	r25, r0
 c68:	b4 9f       	mul	r27, r20
 c6a:	90 0d       	add	r25, r0
 c6c:	a4 9f       	mul	r26, r20
 c6e:	80 0d       	add	r24, r0
 c70:	91 1d       	adc	r25, r1
 c72:	11 24       	eor	r1, r1
 c74:	08 95       	ret

00000c76 <__mulshisi3>:
 c76:	b7 ff       	sbrs	r27, 7
 c78:	0c 94 30 06 	jmp	0xc60	; 0xc60 <__muluhisi3>

00000c7c <__mulohisi3>:
 c7c:	0e 94 30 06 	call	0xc60	; 0xc60 <__muluhisi3>
 c80:	82 1b       	sub	r24, r18
 c82:	93 0b       	sbc	r25, r19
 c84:	08 95       	ret

00000c86 <__udivmodsi4>:
 c86:	a1 e2       	ldi	r26, 0x21	; 33
 c88:	1a 2e       	mov	r1, r26
 c8a:	aa 1b       	sub	r26, r26
 c8c:	bb 1b       	sub	r27, r27
 c8e:	fd 01       	movw	r30, r26
 c90:	0d c0       	rjmp	.+26     	; 0xcac <__udivmodsi4_ep>

00000c92 <__udivmodsi4_loop>:
 c92:	aa 1f       	adc	r26, r26
 c94:	bb 1f       	adc	r27, r27
 c96:	ee 1f       	adc	r30, r30
 c98:	ff 1f       	adc	r31, r31
 c9a:	a2 17       	cp	r26, r18
 c9c:	b3 07       	cpc	r27, r19
 c9e:	e4 07       	cpc	r30, r20
 ca0:	f5 07       	cpc	r31, r21
 ca2:	20 f0       	brcs	.+8      	; 0xcac <__udivmodsi4_ep>
 ca4:	a2 1b       	sub	r26, r18
 ca6:	b3 0b       	sbc	r27, r19
 ca8:	e4 0b       	sbc	r30, r20
 caa:	f5 0b       	sbc	r31, r21

00000cac <__udivmodsi4_ep>:
 cac:	66 1f       	adc	r22, r22
 cae:	77 1f       	adc	r23, r23
 cb0:	88 1f       	adc	r24, r24
 cb2:	99 1f       	adc	r25, r25
 cb4:	1a 94       	dec	r1
 cb6:	69 f7       	brne	.-38     	; 0xc92 <__udivmodsi4_loop>
 cb8:	60 95       	com	r22
 cba:	70 95       	com	r23
 cbc:	80 95       	com	r24
 cbe:	90 95       	com	r25
 cc0:	9b 01       	movw	r18, r22
 cc2:	ac 01       	movw	r20, r24
 cc4:	bd 01       	movw	r22, r26
 cc6:	cf 01       	movw	r24, r30
 cc8:	08 95       	ret

00000cca <_exit>:
 cca:	f8 94       	cli

00000ccc <__stop_program>:
 ccc:	ff cf       	rjmp	.-2      	; 0xccc <__stop_program>
